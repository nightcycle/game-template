name: Validate Commit

on:
  push:

jobs:

  validate:
    runs-on: windows-latest

    strategy:
      matrix:
        scene: [main]
        include:
          - name: main
    steps:
      # Checkout your Git repo
      - uses: actions/checkout@v2

      # Install foreman and all foreman tools
      - uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Generated scripts
      - name: build prop balancing script
        run: spreadsheet-to-luau -o out/Shared/Balancing/PropData.luau -page 986679452 -id Id -nospace -sheet 1Ezpj7wFaXQ5ulzzqfBCI_ny_sfNM2Aon1K7n2di-BRo
      
      - name: build prop material script
        run: spreadsheet-to-luau -o out/Shared/Balancing/MaterialData.luau -page 268155101 -id Id -nospace -sheet 1Ezpj7wFaXQ5ulzzqfBCI_ny_sfNM2Aon1K7n2di-BRo

      - name: build boot scripts
        run: boot build

      - name: build midas scripts
        run: midas build ${{ secrets.PLAYFAB_TITLE_ID }} ${{ secrets.PLAYFAB_SECRET_KEY }}

      - name: install asphalt libraries
        run: asphalt install ${{ secrets.ASPHALT_RELEASE_ASSET_DOWNLOAD_KEY }}

      - name: assemble asphalt assets
        run: asphalt update -build -verbose -force -efficient -deploy

      - name: build datatree scripts
        run: datatree build      

      - name: build pseudo-enum script
        run: pseudo-enum build            

      - name: build style-guide script
        run: style-guide build out/Client/StyleGuide.luau 

      - name: Generate version script
        run: echo 'return "0.1.0"' > out/Shared/Version.luau

      # build place file
      - name: build scene so that sourcemap can be run
        run: scene scene/${{matrix.name}} default.project.json out/Shared/Scene.luau -verbose
 
      # Install wally packages
      - name: update wally packages
        run: wally-update patch        
 
      - name: install wally packages
        run: wally install   
 
      - name: generate sourcemap
        run: rojo sourcemap default.project.json --output sourcemap.json
 
      - name: export wally package types
        run: wally-package-types --sourcemap sourcemap.json Packages

      - name: Install testing files
        shell: bash
        run: |
          # type definitions
          if [ ! -d "types" ]; then
            mkdir "types"
          fi
          curl -L "https://gist.github.com/nightcycle/50ca8f42147077b8f584b503030c8500/raw" > "types/testEZ.d.lua"
          curl -L "https://gist.github.com/nightcycle/ae7ea3376337512772d1d2b314ef467b/raw" > "types/remodel.d.lua"
          curl -L "https://raw.githubusercontent.com/JohnnyMorganz/luau-lsp/main/scripts/globalTypes.d.lua" > "types/globalTypes.d.lua"

          # lint definitions
          if [ ! -d "lints" ]; then
            mkdir "lints"
          fi
          curl -L "https://gist.github.com/nightcycle/a57e04de443dfa89bd08c8eb001b03c6/raw" > "lints/lua51.yml"
          curl -L "https://gist.github.com/nightcycle/93c4b9af5bbf4ed09f39aa908dffccd0/raw" > "lints/luau.yml"
          curl -L "https://gist.github.com/nightcycle/e8c4a9a1d71cfd1a1fff59cad84156d1/raw" > "lints/roblox.yml"

      # apply code styling
      - name: style src scripts
        run: stylua src

      - name: style built scripts
        run: stylua out

      - name: generate sourcemap
        run: rojo sourcemap default.project.json --output sourcemap.json

      # Test validity
      - name: typecheck src files
        run: luau-lsp analyze src --sourcemap=sourcemap.json --ignore="Packages/**" --ignore="**/Packages/**" --ignore="*.spec.luau" --ignore="out/**" --flag:LuauTypeInferIterationLimit=0 --flag:LuauCheckRecursionLimit=0 --flag:LuauTypeInferRecursionLimit=0 --flag:LuauTarjanChildLimit=0 --flag:LuauTypeInferTypePackLoopLimit=0 --flag:LuauVisitRecursionLimit=0 --definitions=types/globalTypes.d.lua --flag:LuauParseDeclareClassIndexer=true

      - name: lint src files
        run: selene src

      - name: lint built files
        run: selene out
