name: Build and Publish

on:
  release:
    types: [published]

jobs:
  get_published_release:
    runs-on: ubuntu-latest

    outputs:
      tag_name: ${{ steps.release_info.outputs.tag_name }}
      release_id: ${{ steps.release_info.outputs.release_id }}
      body: ${{ steps.release_info.outputs.body }}
      upload_url: ${{ steps.release_info.outputs.upload_url }}

    steps:
      - name: Set Release Info
        id: release_info
        run: |
          echo "::set-output name=tag_name::${{ github.event.release.tag_name }}"
          echo "::set-output name=release_id::${{ github.event.release.id }}"
          echo "::set-output name=body::${{ github.event.release.body }}"
          echo "::set-output name=upload_url::${{ github.event.release.upload_url }}"

  build_sequence:
    needs: get_published_release
    runs-on: windows-latest

    strategy:
      matrix:
        scene: [main]
        include:
          - name: main
    steps:
      # Checkout your Git repo
      - uses: actions/checkout@v2

      # Install python to syncronize versions
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install toml
          pip install PyYAML

      # Syncronize version data
      - name: Syncronize version labels
        run: python scripts/workflow/sync-version.py ${{ needs.get_published_release.outputs.tag_name }}
     
      # Install foreman and all foreman tools
      - uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Generate scripts
      - name: build prop balancing script
        run: spreadsheet-to-luau -o out/Shared/Balancing/PropData.luau -page 986679452 -id Id -nospace -sheet 1Ezpj7wFaXQ5ulzzqfBCI_ny_sfNM2Aon1K7n2di-BRo
      
      - name: build prop material script
        run: spreadsheet-to-luau -o out/Shared/Balancing/MaterialData.luau -page 268155101 -id Id -nospace -sheet 1Ezpj7wFaXQ5ulzzqfBCI_ny_sfNM2Aon1K7n2di-BRo

      - name: build boot scripts
        run: boot build

      - name: build midas scripts
        run: midas build ${{ secrets.PLAYFAB_TITLE_ID }} ${{ secrets.PLAYFAB_SECRET_KEY }}

      - name: install asphalt libraries
        run: asphalt install ${{ secrets.ASPHALT_RELEASE_ASSET_DOWNLOAD_KEY }}

      - name: assemble asphalt assets
        run: asphalt update -build -verbose -force -efficient -deploy

      - name: build datatree scripts
        run: datatree build      

      - name: build pseudo-enum script
        run: pseudo-enum build            

      - name: build style-guide script
        run: style-guide build out/Client/StyleGuide.luau 

      # build place file
      - name: build scene so that sourcemap can be run
        run: scene scene/${{matrix.name}} default.project.json out/Shared/Scene.luau -verbose
 
      # Install wally packages
      - name: update wally packages
        run: wally-update patch        
 
      - name: install wally packages
        run: wally install   
 
      - name: generate sourcemap
        run: rojo sourcemap default.project.json --output sourcemap.json
 
      - name: export wally package types
        run: wally-package-types --sourcemap sourcemap.json Packages

      - name: Install testing files
        shell: bash
        run: |
          # type definitions
          if [ ! -d "types" ]; then
            mkdir "types"
          fi
          curl -L "https://gist.github.com/nightcycle/50ca8f42147077b8f584b503030c8500/raw" > "types/testEZ.d.lua"
          curl -L "https://gist.github.com/nightcycle/ae7ea3376337512772d1d2b314ef467b/raw" > "types/remodel.d.lua"
          curl -L "https://raw.githubusercontent.com/JohnnyMorganz/luau-lsp/main/scripts/globalTypes.d.lua" > "types/globalTypes.d.lua"

          # lint definitions
          if [ ! -d "lints" ]; then
            mkdir "lints"
          fi
          curl -L "https://gist.github.com/nightcycle/a57e04de443dfa89bd08c8eb001b03c6/raw" > "lints/lua51.yml"
          curl -L "https://gist.github.com/nightcycle/93c4b9af5bbf4ed09f39aa908dffccd0/raw" > "lints/luau.yml"
          curl -L "https://gist.github.com/nightcycle/e8c4a9a1d71cfd1a1fff59cad84156d1/raw" > "lints/roblox.yml"

      # apply code styling
      - name: style src scripts
        run: stylua src

      - name: style built scripts
        run: stylua out

      - name: generate sourcemap
        run: rojo sourcemap default.project.json --output sourcemap.json

      # Test validity
      - name: typecheck src files
        run: luau-lsp analyze src --sourcemap=sourcemap.json --ignore="Packages/**" --ignore="**/Packages/**" --ignore="*.spec.luau" --ignore="out/**" --flag:LuauTypeInferIterationLimit=0 --flag:LuauCheckRecursionLimit=0 --flag:LuauTypeInferRecursionLimit=0 --flag:LuauTarjanChildLimit=0 --flag:LuauTypeInferTypePackLoopLimit=0 --flag:LuauVisitRecursionLimit=0 --definitions=types/globalTypes.d.lua --flag:LuauParseDeclareClassIndexer=true

      - name: lint src files
        run: selene src

      - name: lint built files
        run: selene out

      # build place file
      - name: build final scene
        run: scene scene/${{matrix.name}} default.project.json out/Shared/Scene.luau -verbose

      # release place file
      - name: Upload place file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ needs.get_published_release.outputs.upload_url }}
          asset_path: scene/${{ matrix.name }}/build.rbxl
          asset_name: ${{ matrix.name }}.rbxl
          asset_content_type: application/octet-stream
        if: matrix.name == 'main'

      - name: Create asphalt ZIP archive
        run: |
          7z a asphalt.zip ./asphalt.cache
          7z a asphalt.zip ./asset

      - name: Upload asphalt.zip file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ needs.get_published_release.outputs.upload_url }}
          asset_path: ./asphalt.zip
          asset_name: asphalt.zip
          asset_content_type: application/octet-stream
        if: matrix.name == 'main'

  publish_places:
    needs:
    - build_sequence
    - get_published_release
    runs-on: windows-latest

    steps:
     #  - name: Convert Draft Release to Non-Draft
     #    shell: bash
     #    run: |
     #      curl --request PUT \
     #      --url https://api.github.com/repos/${{ github.repository }}/releases/${{ needs.get_published_release.outputs.release_id }} \
     #      --header 'authorization: Bearer ${{ secrets.RELEASE_TOKEN }}' \
     #      --header 'content-type: application/json' \
     #      --data '{
     #        "prerelease": false
     #      }'

      # Checkout your Git repo
      - uses: actions/checkout@v2

      # Install python to syncronize versions
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install PyYAML
          pip install requests
          pip install roblox-asset-publish==0.2.11

      # Publish the places
      - name: Publishing release build files
        run: python scripts/workflow/publish.py ${{ needs.get_published_release.outputs.tag_name }} "${{ secrets.RELEASE_TOKEN }}" "${{ secrets.PLACE_PUBLISH_KEY }}" "${{ secrets.ROBLOX_COOKIE }}"
